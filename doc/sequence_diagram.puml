@startuml
actor Administrator
actor Professor
actor Student

participant "DidacticPersonal Service" as DP
participant "Catalogue Service" as C
participant "Config Server" as CS
database DP_DB
database C_DB

' ==== CONFIG SERVER FLOW ====
DP -> CS: fetch config
CS -> DP: return config

C -> CS: fetch config
CS -> C: return config

' ==== ADMINISTRATOR OPERATIONS ====
Administrator -> DP: createClass(classData)
DP -> DP_DB: save class
DP -> C: classCreated(classCode, year) [event]
C -> C_DB: create catalogue
C -> C_DB: create semesters

Administrator -> DP: createStudent(studentData)
DP -> DP_DB: save student

Administrator -> DP: createProfessor(profData)
DP -> DP_DB: save professor

Administrator -> DP: assignProfessorToClass(profId, classId)
DP -> DP_DB: update assignments
DP -> C: updateCatalogueAssignment(classCode, profId)

Administrator -> DP: updateClass(classId, data)
DP -> DP_DB: update class
DP -> C: updateCatalogue(classCode)

Administrator -> DP: updateStudent(studentId, data)
DP -> DP_DB: update student

Administrator -> DP: updateProfessor(profId, data)
DP -> DP_DB: update professor

Administrator -> DP: deleteClass(classId)
DP -> DP_DB: delete class
DP -> C: deleteCatalogue(classCode)



Administrator -> DP: deleteProfessor(profId)
DP -> DP_DB: delete professor

' ==== PROFESSOR OPERATIONS ====
Professor -> C: addGrade(studentCode, grade)
C -> C_DB: save grade

Professor -> C: updateGrade(studentCode, grade)
C -> C_DB: update grade

Professor -> C: deleteGrade(studentCode, gradeId)
C -> C_DB: delete grade

' ==== STUDENT OPERATIONS ====
Student -> C: viewGrades(studentCode)
C -> C_DB: fetch grades
C -> Student: return grades

Student -> C: viewProfessors(classCode)
C -> C_DB: fetch professors
C -> Student: return professors

@enduml
