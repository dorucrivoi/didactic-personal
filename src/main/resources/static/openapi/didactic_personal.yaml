openapi: 3.0.3
info:
  title: Professor and Class Management API
  version: 1.0.0
  description: API for managing professors, classes, and their relationships.

servers:
  - url: http://localhost:8080

tags:
  - name: Professors
    description: Operations related to Professors
  - name: Classes
    description: Operations related to classes

paths:
  /api/admin/professors:
    post:
      tags:
        - Professors
      summary: Add a new professor
      operationId: createProfessor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProfessorRequest'
      responses:
        '201':
          description: Professor created successfully
    get:
      tags:
        - Professors
      summary: List all professors
      operationId: getAllProfessors
      responses:
        '200':
          description: A list of professors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProfessorResponse'
  /api/admin/professors/{classCode}/class:
    get:
      tags:
        - Professors
      summary: List all professors for a class
      operationId: getProfessorsForClassCode
      parameters:
        - in: path
          name: classCode
          required: true
          schema:
            type: string
          description: The code of the class
        - in: query
          name: year
          required: true
          schema:
            type: integer
          description: The year of the class
      responses:
        '200':
          description: A list of professors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProfessorResponse'
  /api/admin/professors/{id}:
    get:
      tags:
        - Professors
      summary: Lists classes assigned to a professor
      operationId: getClassesForProfessor
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: A list of classes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SchoolClassResponse'
    put:
      tags:
        - Professors
      summary: Update professor details
      operationId: updateProfessor
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProfessorRequest'
      responses:
        '200':
          description: Professor updated
    delete:
      tags:
        - Professors
      summary: Remove a professor
      operationId: deleteProfessor
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Professor deleted

  /api/admin/professors/{professorId}/classes:
    post:
      tags:
        - Professors
      summary: Link professor to the given classes
      operationId: assignProfessorToClasses
      parameters:
        - in: path
          name: professorId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        description: List of class IDs to assign
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
      responses:
        '200':
          description: Professor assigned to classes

  /api/admin/classes:
    post:
      tags:
        - Classes
      summary: Create a new class
      operationId: createSchoolClass
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSchoolClassRequest'
      responses:
        '201':
          description: Class created successfully

    get:
      tags:
        - Classes
      summary: List all classes
      operationId: getAllClasses
      responses:
        '200':
          description: A list of classes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SchoolClassResponse'

  /api/admin/classes/{id}:
    get:
      tags:
        - Classes
      summary: Lists professors assigned to a class
      operationId: getProfessorsForClassId
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: A list of professors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProfessorResponse'
    put:
      tags:
        - Classes
      summary: Edit class info
      operationId: updateSchoolClass
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSchoolClassRequest'
      responses:
        '200':
          description: SchoolClass updated

    delete:
      tags:
        - Classes
      summary: Remove a class
      operationId: deleteClass
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Class deleted

components:
  schemas:
    CreateProfessorRequest:
      type: object
      properties:
        name:
          type: string
        disciplineCode:
          type: string
        code:
          type: string

    UpdateProfessorRequest:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        disciplineCode:
          type: string
        code:
          type: string

    ProfessorResponse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
        disciplineCode:
          type: string
        code:
          type: string

    CreateSchoolClassRequest:
      type: object
      properties:
        name:
          type: string
        classCode:
          type: string
        classYear:
          type: integer

    UpdateSchoolClassRequest:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        classCode:
          type: string
        classYear:
          type: integer

    SchoolClassResponse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
        classCode:
          type: string
        classYear:
          type: integer
